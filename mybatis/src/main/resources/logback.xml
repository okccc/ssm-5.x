<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
    <!-- 日志文件的存储地址的绝对路径 -->
    <property name="LOG_HOME" value="/tmp/logs/"/>

    <!-- 指定日志输出位置 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 日志输出格式：时间、日志级别、线程名称、打印日志的类、日志主体内容+换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件,存储事件日志 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 基于时间的滚动策略,如果是web项目会保存到Tomcat的bin目录下 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件名称 -->
            <FileNamePattern>${LOG_HOME}/com.okccc.app-%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
        </encoder>
        <!-- 基于大小的触发策略 -->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>128MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 异步打印日志 -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 默认不丢失日志,如果队列的80%已满,则会丢弃TRACT/DEBUG/INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 默认队列深度256,该值会影响性能 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
    </appender>

    <!-- 设置全局日志级别 -->
    <root level="DEBUG">
        <!-- 指定打印日志的appender -->
        <appender-ref ref="STDOUT" />
        <appender-ref ref="ASYNC_FILE" />
    </root>

    <!-- 可以根据特殊需求指定局部日志级别 -->
    <logger name="com.okccc.mybatis.mapper" level="DEBUG"/>
</configuration>