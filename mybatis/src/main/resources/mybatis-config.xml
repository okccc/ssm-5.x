<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        mybatis核心配置文件中的标签必须按照指定顺序
        properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,
        reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?
    -->

    <!-- 引入properties文件,然后就可以在当前文件使用${key}获取value -->
    <properties resource="jdbc.properties"/>

    <!-- 设置类型别名 -->
    <typeAliases>
        <!--        <typeAlias type="com.okccc.mybatis.pojo.User" alias="aaa"/>-->
        <!--        <typeAlias type="com.okccc.mybatis.pojo.User"/>-->
        <!-- 通过包设置类型别名,指定包下所有类型都拥有默认别名,即类名本身且不区分大小写 -->
        <package name="com.okccc.mybatis.pojo"/>
    </typeAliases>

    <!--
        environments：配置数据库连接,default指定默认环境
        environment：具体数据库环境,prod|dev|test
        transactionManager：事务管理器,JDBC(使用jdbc原生的事务管理方式)|MANAGED(被框架管理比如Spring)
        dataSource：数据源,POOLED(使用数据库连接池)|UNPOOLED(不使用数据库连接池)|JNDI(使用上下文中的数据源)
    -->
    <environments default="dev">
        <environment id="dev">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 引入mybatis映射文件,查看target/classes/com/okccc/mybatis/mapper发现mapper接口和映射文件在同一个包下 -->
    <mappers>
        <!--
            两个一致
            1.mapper接口和映射文件所在的包保持一致,创建package是com.okccc.xxx,创建directory是com/okccc/xxx
            2.mapper接口的名字和映射文件的名字保持一致
        -->
        <package name="com.okccc.mybatis.mapper"/>
    </mappers>
</configuration>